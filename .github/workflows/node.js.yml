# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: 
      - main
    paths:
      - demo-app/**
  pull_request:
    branches: 
      - main
    paths:
      - demo-app/**
      
jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x, 16.x, 18.x]

    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Run in background
      run:
        sudo docker run -d -p 27017:27017 mongo:latest
        npm ci
        npm run build --if-present
    - name: Testing
      run: npm test &
      env: 
        PORT: 5000
        DB_URL: mongodb://localhost:27017/todos

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push
      uses: docker/build-push-action@v2
      with:
        context: .
        push: true
        tags: thinnesen/tradingaps_production_demoapp:${{ github.run_number }}
        file: demo-app/dockerfile

    - name: Repository Dispatch
      uses: peter-evans/repository-dispatch@v1
      with:
        token: ${{ secrets.GIT_PAT }}
        repository: thinnesen/tradingaps-manifest
        event-type: new-image-production
        client-payload: '{"image": "thinnesen/tradingaps_production_demoapp:${{ github.run_number }}"}'        
